/**
 *
 *  @brief     
 *  @details   ~
 *  @author    Jeremy Thornton
 *  @date      12.06.2022
 *  @copyright © Jeremy Thornton, 2022. All right reserved.
 *
 */
#ifndef TEST_WRITE_GLYPH_H
#define TEST_WRITE_GLYPH_H

#include <cassert>
#include <iostream>
#include <fstream>

#include "hga_write_glyph.h"

namespace test_write_glyph {

	void run() {
		std::cout << "test_write_glyph... \n";
		{
			uint8_t v[64] = {
				0xAA, 0xAA, 0xAA, 0xAA,
				0x55, 0x55, 0x55, 0x55,
				0xAA, 0xAA, 0xAA, 0xAA,
				0x55, 0x55, 0x55, 0x55,
				0xAA, 0xAA, 0xAA, 0xAA,
				0x55, 0x55, 0x55, 0x55,
				0xAA, 0xAA, 0xAA, 0xAA,
				0x55, 0x55, 0x55, 0x55,
				0xAA, 0xAA, 0xAA, 0xAA,
				0x55, 0x55, 0x55, 0x55,
				0xAA, 0xAA, 0xAA, 0xAA,
				0x55, 0x55, 0x55, 0x55,
				0xAA, 0xAA, 0xAA, 0xAA,
				0x55, 0x55, 0x55, 0x55,
				0xAA, 0xAA, 0xAA, 0xAA,
				0x55, 0x55, 0x55, 0x55
			};
			hga::screen_bound::write_glyph_32x16(v, 64);
		}
		std::cout << "success!\n";
	}

}

#endif